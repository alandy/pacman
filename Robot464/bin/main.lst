*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.38 Build 9056, Feb 26 2009

    1:  // filename **********Lab17.C***********
    2:  // User programs
    3:  
    4:  //  This example accompanies the books
    5:  //   "Embedded Microcomputer Systems: Real Time Interfacing", 
    6:  //     Thomsen, copyright (c) 2006,
    7:  //   "Introduction to Embedded Microcomputer Systems: 
    8:  //    Motorola 6811 and 6812 Simulation", Brooks-Cole, copyright (c) 2002,
    9:  //    Jonathan W. Valvano 3/17/07
   10:  
   11:  // You may use, edit, run or distribute this file 
   12:  //    as long as the above copyright notices remain
   13:  #include <hidef.h>      /* common defines and macros */
   14:  #include <mc9s12dp512.h>     /* derivative informati on */
   15:  #pragma LINK_INFO DERIVATIVE "mc9s12dp512"
   16:  
   17:  //#include "Lab17.h"   // global constants
   18:  //#include "Lab17OS.h"   // needs access to OS routines
   19:  //#include "Lab17SCI.h"  // needs access to SCI routines
   20:  //#include "debug.h"
   21:  
   22:  #include "LCD.H"
   23:  #include "PLL.H"
   24:  #include "Timer.H"
   25:  #include "PWM.h"
   26:  #include <stdio.h>
   27:  #include "i2c_master.h"
   28:  #include "xbee.h"
   29:  
   30:  //=========Global Variables======================
   31:  int data0;
   32:  int data1;
   33:  int data2;
   34:  int data3;
   35:  int range0;
   36:  int range1;
   37:  int range2;
   38:  int range3;
   39:  int range4;
   40:  char stop_flag;
   41:  
   42:  //===============================
   43:  
   44:  unsigned short static volatile Count0;
   45:  interrupt 8 void TOC0handler(void){ // executes at 100 Hz 
*** EVALUATION ***

Function: TOC0handler
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

   46:    TFLG1 = 0x01;         // acknowledge OC0
  0000 c601         [1]     LDAB  #1
  0002 5b00         [2]     STAB  _TFLG1
   47:    Count0++;
  0004 fe0000       [3]     LDX   Count0
  0007 08           [1]     INX   
  0008 7e0000       [3]     STX   Count0
   48:    TC0 = TC0+10000;      // 10 ms
  000b dc00         [3]     LDD   _TC0
  000d c32710       [2]     ADDD  #10000
  0010 5c00         [2]     STD   _TC0
   49:    PTT ^= 0x01;          // debugging monitor
  0012 f60000       [3]     LDAB  _PTT
  0015 c801         [1]     EORB  #1
  0017 7b0000       [3]     STAB  _PTT
   50:  }
  001a 0b           [8]     RTI   
   51:  
   52:  //---------------------OC_Init0---------------------
   53:  // arm output compare 0 for 100Hz periodic interrupt
   54:  // Input: none
   55:  // Output: none 
   56:  void OC_Init0(){
*** EVALUATION ***

Function: OC_Init0
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

   57:    Count0 = 0;     // debugging monitor
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 7c0000       [3]     STD   Count0
   58:    DDRT |= 0x01;   // debugging monitor
  0005 1c000001     [4]     BSET  _DDRT,#1
   59:    TIOS |= 0x01;   // activate TC0 as output compare
  0009 4c0001       [4]     BSET  _TIOS,#1
   60:    TIE  |= 0x01;   // arm OC0
  000c 4c0001       [4]     BSET  _TIE,#1
   61:    TSCR1 = 0x80;   // Enable TCNT, 24MHz boot mode, 8MHz in run mode
  000f c680         [1]     LDAB  #128
  0011 5b00         [2]     STAB  _TSCR1
   62:    TSCR2 = 0x03;   // divide by 8 TCNT prescale, TOI disarm
  0013 c603         [1]     LDAB  #3
  0015 5b00         [2]     STAB  _TSCR2
   63:    PACTL = 0;      // timer prescale used for TCNT
  0017 5a00         [2]     STAA  _PACTL
   64:  /* Bottom three bits of TSCR2 (PR2,PR1,PR0) set TCNT period
   65:      divide  FastMode(24MHz)    Slow Mode (8MHz)
   66:  000   1     42ns  TOF  2.73ms  125ns TOF  8.192ms
   67:  001   2     84ns  TOF  5.46ms  250ns TOF 16.384ms 
   68:  010   4    167ns  TOF  10.9ms  500ns TOF 32.768ms     
   69:  011   8    333ns  TOF  21.8ms    1us TOF 65.536ms
   70:  100  16    667ns  TOF  43.7ms    2us TOF 131.072ms
   71:  101  32   1.33us  TOF  87.4ms    4us TOF 262.144ns
   72:  110  64   2.67us  TOF 174.8ms    8us TOF 524.288ms
   73:  111 128   5.33us  TOF 349.5ms   16us TOF 1.048576s */
   74:    TC0    = TCNT+50; // first interrupt right away
  0019 de00         [3]     LDX   _TCNT
  001b 1ae032       [2]     LEAX  50,X
  001e 5e00         [2]     STX   _TC0
   75:  }
  0020 3d           [5]     RTS   
   76:  
   77:  unsigned short static volatile Count3;
   78:  interrupt 11 void TOC3handler(void){ // executes at 1000 Hz 
*** EVALUATION ***

Function: TOC3handler
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

   79:    TFLG1 = 0x08;         // acknowledge OC3
  0000 c608         [1]     LDAB  #8
  0002 5b00         [2]     STAB  _TFLG1
   80:    Count3++;
  0004 fe0000       [3]     LDX   Count3
  0007 08           [1]     INX   
  0008 7e0000       [3]     STX   Count3
   81:    TC3 = TC3+1000;       // 1 ms
  000b dc00         [3]     LDD   _TC3
  000d c303e8       [2]     ADDD  #1000
  0010 5c00         [2]     STD   _TC3
   82:    PTT ^= 0x08;          // debugging monitor
  0012 f60000       [3]     LDAB  _PTT
  0015 c808         [1]     EORB  #8
  0017 7b0000       [3]     STAB  _PTT
   83:  }
  001a 0b           [8]     RTI   
   84:  
   85:  //---------------------OC_Init3---------------------
   86:  // arm output compare 3 for 1000Hz periodic interrupt
   87:  // Input: none    assumes another ritual enabled the TCNT
   88:  // Output: none 
   89:  void OC_Init3(){
*** EVALUATION ***

Function: OC_Init3
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

   90:    Count3 = 0;      // debugging monitor      
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 7c0000       [3]     STD   Count3
   91:    DDRT |= 0x08;    // debugging monitor
  0005 1c000008     [4]     BSET  _DDRT,#8
   92:    TIOS |= 0x08;    // activate TC3 as output compare
  0009 4c0008       [4]     BSET  _TIOS,#8
   93:    TIE  |= 0x08;    // arm OC3
  000c 4c0008       [4]     BSET  _TIE,#8
   94:    TC3   = TCNT+50; // first interrupt right away
  000f de00         [3]     LDX   _TCNT
  0011 1ae032       [2]     LEAX  50,X
  0014 5e00         [2]     STX   _TC3
   95:  }
  0016 3d           [5]     RTS   
   96:  
   97:  //#######################################################
   98:  
   99:  //---------------------Move--------------------------
  100:  void Move_update(void){
*** EVALUATION ***

Function: Move_update
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  101:    
  102:    PWM_Duty3(data3);
  0000 f60000       [3]     LDAB  data3:1
  0003 160000       [4]     JSR   PWM_Duty3
  103:    PWM_Duty2(data2);
  0006 f60000       [3]     LDAB  data2:1
  0009 160000       [4]     JSR   PWM_Duty2
  104:    PWM_Duty1(data1);
  000c f60000       [3]     LDAB  data1:1
  000f 160000       [4]     JSR   PWM_Duty1
  105:    PWM_Duty0(data0);
  0012 f60000       [3]     LDAB  data0:1
  0015 060000       [3]     JMP   PWM_Duty0
  106:  
  107:  }
  108:  
  109:  //---------------------Sensor_Read-------------------
  110:  void Sensor_Read(void){
*** EVALUATION ***

Function: Sensor_Read
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  111:    range0 = ADC_In(0x80);	 // right justified channel 0
  0000 c680         [1]     LDAB  #128
  0002 87           [1]     CLRA  
  0003 160000       [4]     JSR   ADC_In
  0006 7c0000       [3]     STD   range0
  112:    range1 = ADC_In(0x81);	 // right justified channel 1
  0009 c681         [1]     LDAB  #129
  000b 87           [1]     CLRA  
  000c 160000       [4]     JSR   ADC_In
  000f 7c0000       [3]     STD   range1
  113:    range2 = ADC_In(0x82);	 // right justified channel 2
  0012 c682         [1]     LDAB  #130
  0014 87           [1]     CLRA  
  0015 160000       [4]     JSR   ADC_In
  0018 7c0000       [3]     STD   range2
  114:    range3 = ADC_In(0x83);	 // right justified channel 3
  001b c683         [1]     LDAB  #131
  001d 87           [1]     CLRA  
  001e 160000       [4]     JSR   ADC_In
  0021 7c0000       [3]     STD   range3
  115:    range4 = ADC_In(0x84);	 // right justified channel 4
  0024 c684         [1]     LDAB  #132
  0026 87           [1]     CLRA  
  0027 160000       [4]     JSR   ADC_In
  002a 7c0000       [3]     STD   range4
  116:  }
  002d 3d           [5]     RTS   
  117:  
  118:  //---------------------Turn_Left--------------------
  119:  void Turn_Left(void){
*** EVALUATION ***

Function: Turn_Left
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  120:  
  121:        data3=25;
  0000 c619         [1]     LDAB  #25
  0002 87           [1]     CLRA  
  0003 7c0000       [3]     STD   data3
  122:        data1=75;
  0006 c64b         [1]     LDAB  #75
  0008 7c0000       [3]     STD   data1
  123:        data2=75;
  000b 7c0000       [3]     STD   data2
  124:        data0=25;
  000e c619         [1]     LDAB  #25
  0010 7c0000       [3]     STD   data0
  125:        
  126:    Move_update();
  0013 0700         [4]     BSR   Move_update
  127:    
  128:    swait();
  0015 160000       [4]     JSR   swait
  129:        data3=25;
  0018 c619         [1]     LDAB  #25
  001a 87           [1]     CLRA  
  001b 7c0000       [3]     STD   data3
  130:        data1=25;
  001e 7c0000       [3]     STD   data1
  131:        data2=25;
  0021 7c0000       [3]     STD   data2
  132:        data0=25;
  0024 7c0000       [3]     STD   data0
  133:        
  134:    //Move_update();
  135:    
  136:  }
  0027 3d           [5]     RTS   
  137:  
  138:  //---------------------Turn_Right--------------------
  139:  void Turn_Right(void){
*** EVALUATION ***

Function: Turn_Right
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  140:  
  141:        data3=75;
  0000 c64b         [1]     LDAB  #75
  0002 87           [1]     CLRA  
  0003 7c0000       [3]     STD   data3
  142:        data1=25;
  0006 c619         [1]     LDAB  #25
  0008 7c0000       [3]     STD   data1
  143:        data2=25;
  000b 7c0000       [3]     STD   data2
  144:        data0=75;
  000e c64b         [1]     LDAB  #75
  0010 7c0000       [3]     STD   data0
  145:        
  146:    Move_update();
  0013 160000       [4]     JSR   Move_update
  147:    
  148:    swait();
  0016 160000       [4]     JSR   swait
  149:        data3=25;
  0019 c619         [1]     LDAB  #25
  001b 87           [1]     CLRA  
  001c 7c0000       [3]     STD   data3
  150:        data1=25;
  001f 7c0000       [3]     STD   data1
  151:        data2=25;
  0022 7c0000       [3]     STD   data2
  152:        data0=25;
  0025 7c0000       [3]     STD   data0
  153:        
  154:    Move_update();
  0028 060000       [3]     JMP   Move_update
  155:    
  156:  }
  157:  
  158:  #define FULL_SPEED_POWER 95
  159:  #define ZERO_SPEED_POWER 25
  160:  void straight(void) {
*** EVALUATION ***

Function: straight
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  161:    
  162:      data3=FULL_SPEED_POWER;
  0000 c65f         [1]     LDAB  #95
  0002 87           [1]     CLRA  
  0003 7c0000       [3]     STD   data3
  163:      data1=FULL_SPEED_POWER;
  0006 7c0000       [3]     STD   data1
  164:      data2=ZERO_SPEED_POWER;
  0009 c619         [1]     LDAB  #25
  000b 7c0000       [3]     STD   data2
  165:      data0=ZERO_SPEED_POWER;
  000e 7c0000       [3]     STD   data0
  166:      Move_update();
  0011 060000       [3]     JMP   Move_update
  167:    
  168:  }
  169:  
  170:  //#######################################################
  171:  
  172:  
  173:  //=========Main======================
  174:  
  175:  unsigned short startHeading = 0;
  176:  unsigned short desiredHeading = 0;
  177:  
  178:  void main(void){ 
*** EVALUATION ***

Function: main
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  0000 1b92         [2]     LEAS  -14,SP
  179:  
  180:    int checkStatus;
  181:    short heading;
  182:    // running at 4 MHz
  183:    char msg[10];
  184:    OC_Init0();
  0002 160000       [4]     JSR   OC_Init0
  185:    OC_Init3();
  0005 160000       [4]     JSR   OC_Init3
  186:    DDRP |= 0x80;  // LED
  0008 1c000080     [4]     BSET  _DDRP,#128
  187:  
  188:    PLL_Init();       // set E clock to 24 MHz
  000c 160000       [4]     JSR   PLL_Init
  189:    Timer_Init();      // enable timer
  000f 160000       [4]     JSR   Timer_Init
  190:    DDRP |= 0x80;     // PortP bit 7 is output to LED, used for debugging
  0012 1c000080     [4]     BSET  _DDRP,#128
  191:    DDRM |= 0x03;
  0016 1c000003     [4]     BSET  _DDRM,#3
  192:  
  193:    PWM_Init();
  001a 160000       [4]     JSR   PWM_Init
  194:    ADC_Init();     // Activate ADC 
  001d 160000       [4]     JSR   ADC_Init
  195:    I2C_Init();
  0020 160000       [4]     JSR   I2C_Init
  196:    asm cli
  0023 10ef         [1]     CLI   
  197:  
  198:   /* checkStatus = xb_Init("11", 0);
  199:  	if ( checkStatus < 0) {
  200:  	 	//printf("Error in xb_Init: %d", checkStatus);
  201:  	   PTP_PTP7 = 1;
  202:  	   while(1);
  203:  	};*/
  204:  
  205:    check(LCD_Open());
  0025 160000       [4]     JSR   LCD_Open
  0028 160000       [4]     JSR   check
  206:    check(LCD_Clear());
  002b 160000       [4]     JSR   LCD_Clear
  002e 160000       [4]     JSR   check
  207:    check(LCD_OutString(" DP512  ")); blank();
  0031 cc0000       [2]     LDD   #" DP512  "
  0034 160000       [4]     JSR   LCD_OutString
  0037 160000       [4]     JSR   check
  003a 160000       [4]     JSR   blank
  208:    check(LCD_OutString("Valvano ")); swait();  
  003d cc0000       [2]     LDD   #"Valvano "
  0040 160000       [4]     JSR   LCD_OutString
  0043 160000       [4]     JSR   check
  0046 160000       [4]     JSR   swait
  209:      
  210:      PTM |= 0x03;
  0049 1c000003     [4]     BSET  _PTM,#3
  211:      while(!PTP_PTP6) {
  004d 201b         [3]     BRA   *+29 ;abs = 006a
  212:      mwait(100);    
  004f c664         [1]     LDAB  #100
  0051 87           [1]     CLRA  
  0052 160000       [4]     JSR   main:0x00e3
  213:      LCD_Clear();
  214:      sprintf(msg, "%d", startHeading = I2C_Recv16(0xC0, 0x02));
  0055 7c0000       [3]     STD   startHeading
  0058 3b           [2]     PSHD  
  0059 cc0000       [2]     LDD   #"%d"
  005c 3b           [2]     PSHD  
  005d 1a88         [2]     LEAX  8,SP
  005f 34           [2]     PSHX  
  0060 6e86         [2]     STX   6,SP
  0062 160000       [4]     JSR   sprintf
  215:      LCD_OutString(msg);
  0065 eca5         [3]     LDD   6,+SP
  0067 160000       [4]     JSR   LCD_OutString
  006a 1f000040e0   [5]     BRCLR _PTP,#64,*-27 ;abs = 004f
  216:      
  217:        
  218:      }
  219:      
  220:      desiredHeading = startHeading;
  006f fc0000       [3]     LDD   startHeading
  0072 7c0000       [3]     STD   desiredHeading
  221:      
  222:      PTM &= ~0x03;
  0075 1d000003     [4]     BCLR  _PTM,#3
  223:    straight();    
  0079 160000       [4]     JSR   straight
  224:           
  225:    for(;;) {
  226:      
  227:      PTP ^= 0x80;           // toggle LED
  007c f60000       [3]     LDAB  _PTP
  007f c880         [1]     EORB  #128
  0081 7b0000       [3]     STAB  _PTP
  228:      mwait(500);    
  0084 cc01f4       [2]     LDD   #500
  0087 075a         [4]     BSR   *+92 ;abs = 00e3
  229:      LCD_Clear();
  230:      //sprintf(msg, "%d", ADC_In(0x87));
  231:      heading = I2C_Recv16(0xC0, 0x02);
  0089 6c82         [2]     STD   2,SP
  232:      sprintf(msg, "%d", heading);
  008b 3b           [2]     PSHD  
  008c cc0000       [2]     LDD   #"%d"
  008f 3b           [2]     PSHD  
  0090 1a88         [2]     LEAX  8,SP
  0092 34           [2]     PSHX  
  0093 6e86         [2]     STX   6,SP
  0095 160000       [4]     JSR   sprintf
  233:      LCD_OutString(msg);
  0098 eca5         [3]     LDD   6,+SP
  009a 160000       [4]     JSR   LCD_OutString
  234:      
  235:      #define DELTA 5
  236:      #define THRESH1 15
  237:      //HEADING: Left is bigger, right is smaller (compass mounted upside down)
  238:      // data1 is rightForward, data3 is leftForward, data2 is leftBack, data0 is rightBack
  239:      
  240:      heading -= desiredHeading;
  009d ec82         [3]     LDD   2,SP
  009f b30000       [3]     SUBD  desiredHeading
  00a2 6c82         [2]     STD   2,SP
  241:      
  242:      if (heading > THRESH1) {
  00a4 8c000f       [2]     CPD   #15
  00a7 2f15         [3/1]   BLE   *+23 ;abs = 00be
  243:        //drifting to the left, reduce power to right wheel
  244:        data1 -= DELTA;
  00a9 fe0000       [3]     LDX   data1
  00ac 1a1b         [2]     LEAX  -5,X
  00ae 7e0000       [3]     STX   data1
  245:        
  246:        PTM_PTM0 = 1;
  00b1 1c000001     [4]     BSET  _PTM,#1
  247:        PTM_PTM1 = 0;
  00b5 1d000002     [4]     BCLR  _PTM,#2
  248:        Move_update();
  00b9 160000       [4]     JSR   Move_update
  249:        
  250:      } else if (heading < (-THRESH1)) {
  00bc 20be         [3]     BRA   *-64 ;abs = 007c
  00be 8cfff1       [2]     CPD   #65521
  00c1 2c15         [3/1]   BGE   *+23 ;abs = 00d8
  251:        //drifting to the right, reduce power to left wheel
  252:        data3 -= DELTA;
  00c3 fe0000       [3]     LDX   data3
  00c6 1a1b         [2]     LEAX  -5,X
  00c8 7e0000       [3]     STX   data3
  253:        
  254:        Move_update();
  00cb 160000       [4]     JSR   Move_update
  255:        PTM_PTM1 = 1;
  00ce 1c000002     [4]     BSET  _PTM,#2
  256:        PTM_PTM0 = 0;
  00d2 1d000001     [4]     BCLR  _PTM,#1
  257:      } else {
  00d6 20a4         [3]     BRA   *-90 ;abs = 007c
  258:        straight();
  00d8 160000       [4]     JSR   straight
  259:        PTM &= ~0x03;
  00db 1d000003     [4]     BCLR  _PTM,#3
  00df 209b         [3]     BRA   *-99 ;abs = 007c
  260:      }
  261:    }
  262:  }
  00e1 1b82         [2]     LEAS  2,SP
  00e3 160000       [4]     JSR   mwait
  00e6 160000       [4]     JSR   LCD_Clear
  00e9 c6c0         [1]     LDAB  #192
  00eb 37           [2]     PSHB  
  00ec c602         [1]     LDAB  #2
  00ee 160000       [4]     JSR   I2C_Recv16
  00f1 1b81         [2]     LEAS  1,SP
  00f3 3d           [5]     RTS   
  263:  
  264:  
  265:  
  266:  
  267:  
  268:  
  269:  
  270:  
  271:  
  272:  
  273:  
  274:  
  275:  
  276:  
  277:  
  278:  
  279:  
  280:  
  281:  
  282:  
  283:  void main1(void){ 
*** EVALUATION ***

Function: main1
Source  : C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources\main.c
Options : -BfaGapLimitBits-1 -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\prm;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\cmd;C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\lib;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\src;C:\Documents and Settings\Aaron Landy\Desktop\Maze2\Sources;C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CodeWarrior for S12(X) V5.0\lib\HC12c\include" -Env"OBJPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Env"TEXTPATH=C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\bin" -Lasm=%n.lst -Ms -ObjN="C:\Documents and Settings\Aaron Landy\Desktop\OC_DP512\OC_DP512_Data\HCS12_Serial_Monitor\ObjectCode\main.c.o" -WmsgSd1106

  284:  
  285:    EnableInterrupts;
  0000 10ef         [1]     CLI   
  286:    // running at 4 MHz
  287:    
  288:    OC_Init0();
  0002 160000       [4]     JSR   OC_Init0
  289:    OC_Init3();
  0005 160000       [4]     JSR   OC_Init3
  290:    DDRP |= 0x80;  // LED
  0008 1c000080     [4]     BSET  _DDRP,#128
  291:    asm cli
  000c 10ef         [1]     CLI   
  292:  
  293:    PLL_Init();       // set E clock to 24 MHz
  000e 160000       [4]     JSR   PLL_Init
  294:    Timer_Init();      // enable timer
  0011 160000       [4]     JSR   Timer_Init
  295:    ADC_Init();     // Activate ADC 
  0014 160000       [4]     JSR   ADC_Init
  296:    PWM_Init();
  0017 160000       [4]     JSR   PWM_Init
  297:    DDRP |= 0x80;     // PortP bit 7 is output to LED, used for debugging
  001a 1c000080     [4]     BSET  _DDRP,#128
  298:    check(LCD_Open());
  001e 160000       [4]     JSR   LCD_Open
  0021 160000       [4]     JSR   check
  299:    check(LCD_Clear());
  0024 160000       [4]     JSR   LCD_Clear
  0027 160000       [4]     JSR   check
  300:    check(LCD_OutString(" Robot  ")); blank();
  002a cc0000       [2]     LDD   #" Robot  "
  002d 160000       [4]     JSR   LCD_OutString
  0030 160000       [4]     JSR   check
  0033 160000       [4]     JSR   blank
  301:    check(LCD_OutString("Pacman ")); swait();
  0036 cc0000       [2]     LDD   #"Pacman "
  0039 160000       [4]     JSR   LCD_OutString
  003c 160000       [4]     JSR   check
  003f 160000       [4]     JSR   swait
  302:    asm cli   // allows debugger to run
  0042 10ef         [1]     CLI   
  303:    
  304:      
  305:    //PWM_Duty3(25);  // PP3 10% 93.75Hz wave
  306:    //PWM_Duty1(225); // PP1 90% 93.75Hz wave
  307:    
  308:  
  309:   
  310:    for(;;) {
  0044 2043         [3]     BRA   *+69 ;abs = 0089
  311:      
  312:      PTP ^= 0x80;           // toggle LED
  0046 f60000       [3]     LDAB  _PTP
  0049 c880         [1]     EORB  #128
  004b 7b0000       [3]     STAB  _PTP
  313:      Sensor_Read();
  004e 160000       [4]     JSR   Sensor_Read
  314:      //check(LCD_GoTo(2,3));
  315:      stop_flag = 0;
  0051 0738         [4]     BSR   *+58 ;abs = 008b
  316:      
  317:      data3=95;
  318:      data1=95;
  319:      data2=25;
  320:      data0=25;
  321:      Move_update();
  0053 160000       [4]     JSR   Move_update
  322:       
  323:      //sensor detection
  324:      if( (range0 > 500) ){     
  0056 fc0000       [3]     LDD   range0
  0059 8c01f4       [2]     CPD   #500
  005c 2f19         [3/1]   BLE   *+27 ;abs = 0077
  325:        data3=25;
  005e c619         [1]     LDAB  #25
  0060 87           [1]     CLRA  
  0061 7c0000       [3]     STD   data3
  326:        data1=25;
  0064 7c0000       [3]     STD   data1
  327:        data2=25;
  0067 7c0000       [3]     STD   data2
  328:        data0=25;
  006a 7c0000       [3]     STD   data0
  329:        Move_update();
  006d 160000       [4]     JSR   Move_update
  330:        stop_flag = 1;
  0070 c601         [1]     LDAB  #1
  0072 7b0000       [3]     STAB  stop_flag
  331:        
  332:        //Turn_Left();    
  333:        
  334:        
  335:      }else{
  0075 20cf         [3]     BRA   *-47 ;abs = 0046
  336:        stop_flag = 0;
  0077 0712         [4]     BSR   *+20 ;abs = 008b
  337:        data3=95;
  338:        data1=95;
  339:        data2=25;
  340:        data0=25;
  341:           
  342:           if(range0 > 500){      //left side sensor
  343:             data1 -= 5;    
  344:           } else if(range1 > 500){      //right side sensor
  0079 fe0000       [3]     LDX   range1
  007c 8e01f4       [2]     CPX   #500
  007f 2fc5         [3/1]   BLE   *-57 ;abs = 0046
  345:             data3 -= 5;    
  0081 fe0000       [3]     LDX   data3
  0084 1a1b         [2]     LEAX  -5,X
  0086 7e0000       [3]     STX   data3
  346:           } 
  347:      }   
  348:      /*
  349:      if(stop_flag == 1){
  350:        Turn_Left();    
  351:        swait();
  352:        range2 = ADC_In(0x82);
  353:        if(range2 > 500){
  354:          Turn_Right();
  355:          Turn_Right();
  356:        
  357:        }
  358:        
  359:      }
  360:      */
  361:       
  362:                
  363:       
  364:      
  365:      /*
  366:      //This section is used to display the IR reading on the LCD
  367:      check(LCD_OutString("Range0")); blank();
  368:      check(LCD_OutNum(range0)); swait();
  369:      check(LCD_OutString("Range1")); blank();    
  370:      check(LCD_OutNum(range1)); swait();
  371:      check(LCD_OutString("Range2")); blank();    
  372:      check(LCD_OutNum(range2)); swait();
  373:                                                    
  374:      /*                                              
  375:      check(LCD_OutString("Range2")); blank();    
  376:      check(LCD_OutNum(range2)); swait();
  377:      
  378:      check(LCD_OutString("Stop")); blank();    
  379:      check(LCD_OutNum(stop_flag)); swait();
  380:      */
  381:    } 
  0089 20bb         [3]     BRA   *-67 ;abs = 0046
  008b 790000       [3]     CLR   stop_flag
  008e c65f         [1]     LDAB  #95
  0090 87           [1]     CLRA  
  0091 7c0000       [3]     STD   data3
  0094 7c0000       [3]     STD   data1
  0097 c619         [1]     LDAB  #25
  0099 7c0000       [3]     STD   data2
  009c 7c0000       [3]     STD   data0
  009f 3d           [5]     RTS   
  382:      
  383:  
  384:    //OS_AddThread(&Interpreter); 
  385:    //OS_AddThread(&Consumer); 
  386:    //OS_AddThread(&Math); 
  387:   
  388:    //SCI_Init(BR);
  389:    //OS_Launch(TIMESLICE); // doesn't return
  390:  }
  391:   	
  392:   
  393:  
  394:  
